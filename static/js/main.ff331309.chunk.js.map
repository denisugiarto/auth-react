{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/PrivateRoute.js","components/Login.js","components/Dashboard.js","components/Signup.js","components/ForgetPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["dotenv","config","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","emailVerified","sendEmailVerification","value","signup","email","password","createUserWithEmailAndPassword","emailVerification","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","deleteAccount","delete","Provider","PrivateRoute","Component","component","rest","render","props","to","Login","emailRef","useRef","passwordRef","error","setError","history","useHistory","e","a","preventDefault","current","push","console","log","code","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","autoComplete","name","Button","disabled","Dashboard","toString","onClick","Signup","passwordConfirmRef","message","setMessage","isEmailCanRegis","setIsEmailCanRegis","isPassOk","setIsPassOk","checked","setChecked","handlePassConfirm","test","isRegisted","isBusy","promises","Promise","all","then","catch","finally","ToggleButton","size","onChange","ForgetPassword","UpdateProfile","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","basename","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff331309.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport dotenv from 'dotenv';\r\n\r\n\r\ndotenv.config();\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function emailVerification() {\r\n    return currentUser.sendEmailVerification();\r\n  }\r\n  \r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  function deleteAccount() {\r\n    return currentUser.delete();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      if (user && !user.emailVerified) {\r\n        user.sendEmailVerification();\r\n      }\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    emailVerification,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n    deleteAccount\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render=\r\n      {(props) => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />;\r\n      }}>\r\n    </Route>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\r\nimport { useAuth } from \"./../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error.code);\r\n      error.code === \"auth/user-not-found\"\r\n        ? setError(\"User not found\")\r\n        : setError(\"Password wrong. Try again or use Forget Password\");\r\n      // setError(\"Failed to sign in\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Log in</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required autoComplete=\"on\" name=\"email\"/>\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n              Log in\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/forget-password\">Forget Password?</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account <Link to=\"/signup\">Sign up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Button, Card } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const { currentUser, logout, emailVerification, deleteAccount } = useAuth();\r\n  const history = useHistory();\r\n\r\n  function handleResend() {\r\n    return emailVerification();\r\n  }\r\n\r\n  function handleDelete() {\r\n    return deleteAccount();\r\n  }\r\n\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      await logout();\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      setError(\"Failed to log out\");\r\n    }\r\n  }\r\n  console.log(currentUser);\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <p>\r\n            <strong>Email: </strong> {currentUser.email}\r\n          </p>\r\n          <p>\r\n            <strong>Verification: </strong>{\" \"}\r\n            {currentUser.emailVerified.toString()}\r\n          </p>\r\n          {!currentUser.emailVerified && (\r\n            <Button onClick={handleResend} variant=\"info\">\r\n              Resend Verification\r\n            </Button>\r\n          )}\r\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n            Update Profile\r\n          </Link>\r\n          <Button onClick={handleDelete} variant=\"danger\" className=\"w-100 mt-3\">Delete Account</Button>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Button variant=\"link\" onClick={handleLogout}>\r\n          Log out\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Button, Card, Form, ToggleButton } from \"react-bootstrap\";\r\nimport { useAuth } from \"./../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { signup, login } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [isEmailCanRegis, setIsEmailCanRegis] = useState(false);\r\n  const [isPassOk, setIsPassOk] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    promises.push(signup(emailRef.current.value, passwordRef.current.value));\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setMessage(\"Sign up successfull check your inbox mail\");\r\n      })\r\n      .catch((error) => {\r\n        const isRegisted =\r\n          error.code === \"auth/wrong-password\" ||\r\n          error.code === \"auth/email-already-exist\";\r\n        const isBusy = error.code === \"auth/too-many-requests\";\r\n        isRegisted ? setError(\"Email already use\") : setError(\"Sign up failed\");\r\n        isBusy ? setError(\"too many request\") : setError(\"\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  function handlePassConfirm() {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n    const check =\r\n      passwordRef.current.value !== passwordConfirmRef.current.value;\r\n    if (check) {\r\n      setError(\"Password do not match\");\r\n      setMessage(\"\");\r\n      setIsPassOk(false);\r\n    } else {\r\n      setMessage(\"Password match\");\r\n      setError(\"\");\r\n      setIsPassOk(true);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  async function handleUserTest() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      const emailRegex = /^\\S+@\\S+\\.\\S+$/;\r\n      if (emailRegex.test(emailRef.current.value)) {\r\n        await login(emailRef.current.value, \"123456\");\r\n      } else {\r\n        setError(\"Email invalid\");\r\n        setMessage(\"\");\r\n      }\r\n    } catch (error) {\r\n      const isRegisted =\r\n        error.code === \"auth/wrong-password\" ||\r\n        error.code === \"auth/email-already-exist\";\r\n      const isBusy = error.code === \"auth/too-many-requests\";\r\n      console.log(error.code);\r\n      console.log(\"isRegisted = \" + isRegisted);\r\n      if (isRegisted) {\r\n        setError(\"User already exist\");\r\n        setMessage(\"\");\r\n      } else if (isBusy) {\r\n        setError(\"Server busy\");\r\n      } else if (error.code === \"auth/user-not-found\") {\r\n        setMessage(\"You can use this email\");\r\n        setError(\"\");\r\n        setIsEmailCanRegis(true);\r\n        setChecked(true);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required autoComplete=\"on\" name=\"email\"/>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <ToggleButton\r\n                onClick={handleUserTest}\r\n                className=\"mt-1 mb-2\"\r\n                id=\"toggle-check btn-check\"\r\n                type=\"checkbox\"\r\n                variant=\"outline-primary\"\r\n                checked={checked}\r\n                value=\"1\"\r\n                size=\"sm\"\r\n              >\r\n                Check Email\r\n              </ToggleButton>\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                onChange={handlePassConfirm}\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                onChange={handlePassConfirm}\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                required\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              disabled={loading || !isEmailCanRegis || !isPassOk}\r\n              className=\"w-100 mt-3\"\r\n              type=\"submit\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? <Link to=\"/login\">Log in</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"./../contexts/AuthContext\";\r\n\r\nexport default function ForgetPassword() {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(emailRef.current.value);\r\n      setMessage(\"Check your inbox for further instructions\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setError(\"Failed to reset password\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {message && <Alert variant=\"success\">{message}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <div className=\"w-100 text-center mt-3\">\r\n            <Link to=\"/login\">Login</Link>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Need an account <Link to=\"/signup\">Sign up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Button, Card, Form } from \"react-bootstrap\";\r\nimport { useAuth } from \"./../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function UpdateProfile() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { currentUser, updateEmail, updatePassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Password do not match\");\r\n    }\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                required\r\n                defaultValue={currentUser.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                placeholder=\"Leave blank to keep the same\"\r\n              />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n              Update Profile\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        <Link to=\"/\">Cancel</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AuthProvider } from \"../contexts/AuthContext\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport Signup from \"./Signup\";\nimport ForgetPassword from \"./ForgetPassword\";\nimport UpdateProfile from \"./UpdateProfile\"\n\nfunction App() {\n  return (\n    <Container\n    className=\"d-flex justify-content-center align-items-center\"\n    style={{ minHeight: \"100vh\" }}\n    >\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Router basename={process.env.PUBLIC_URL}>\n            <AuthProvider>\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Dashboard} />\n                <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                <Route path=\"/signup\" component={Signup} />  \n                <Route path=\"/login\" component={Login} />  \n                <Route path=\"/forget-password\" component={ForgetPassword} />  \n              </Switch>\n            </AuthProvider>\n          </Router>\n        </div>\n      </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}